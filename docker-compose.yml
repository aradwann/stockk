
services:
  postgres:
    image: postgres:17-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - data-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "root", "-d", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin4:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@domain.com
      - PGADMIN_DEFAULT_PASSWORD=SuperSecret
    ports:
      - "80:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./servers.json:/pgadmin4/servers.json

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${HTTP_SERVER_PORT}:${HTTP_SERVER_PORT}
    environment:
      - DB_SOURCE=postgresql://root:secret@postgres:5432/stockk?sslmode=disable

    depends_on:
      postgres:  # Wait for postgres to start
        condition: service_healthy  # Only start after postgres is healthy
      redis:  # Wait for redis to start
        condition: service_healthy  # Only start after redis is healthy

volumes:
  data-volume:
  pgadmin-data: